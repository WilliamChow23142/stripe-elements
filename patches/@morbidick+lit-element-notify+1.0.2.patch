diff --git a/node_modules/@morbidick/lit-element-notify/notify.js b/node_modules/@morbidick/lit-element-notify/notify.js
index b6790b2..4abb133 100644
--- a/node_modules/@morbidick/lit-element-notify/notify.js
+++ b/node_modules/@morbidick/lit-element-notify/notify.js
@@ -1,3 +1,4 @@
+import { LitElement } from 'lit-element';
 /**
  * Returns the event name for the given property.
  */
@@ -13,19 +14,26 @@ export function eventNameForProperty(name, options = {}) {
     return `${name.toLowerCase()}-changed`;
 }
 
+/**
+ * @template TBase
+ * @typedef {new (...args: any[]) => import('lit-element').LitElement & TBase} Constructor
+ */
+
+// eslint-disable-next-line valid-jsdoc
 /**
  * Enables the nofity option for properties to fire change notification events
  *
- * @param {LitElement} baseElement - the LitElement to extend
+ * @template TBase
+ * @param {Constructor<TBase>} baseElement
  */
-export const LitNotify = (baseElement) => class extends baseElement {
+export const LitNotify = (baseElement) => class NotifyingElement extends baseElement {
     /**
      * Extend the LitElement `createProperty` method to map properties to events
      */
     static createProperty(name, options) {
         super.createProperty(name, options);
 
-        if (!this.hasOwnProperty('_propertyEventMap')) {
+        if (!this._propertyEventMap) {
             this._propertyEventMap = new Map();
         }
 
@@ -50,8 +58,8 @@ export const LitNotify = (baseElement) => class extends baseElement {
                     detail: {
                         value: this[eventProp],
                     },
-                    bubbles: false,
-                    composed: true,
+                    bubbles: true,
+                    composed: false,
                 }));
             }
         }
